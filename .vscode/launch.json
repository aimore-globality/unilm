{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "justMyCode": false,
    "configurations": [
        {            
            "justMyCode": false,
            "name": "Python",
            "type": "python",
            "request": "launch",
            "program": "/data/GIT/unilm/markuplm/notebooks/check_debug.py",
        },
        {            
            "justMyCode": false,
            "name": "Python",
            "type": "python",
            "request": "launch",
            "program": "/data/GIT/unilm/markuplm/notebooks/PastClientTaxonomy_Wikipedia.py",
        },
        {            
            "name": "Python: Run train and evaluate - testing mode",
            "type": "python",
            "request": "launch",
            "program": "/data/GIT/unilm/markuplm/markuplmft/fine_tuning/run_swde/run.py",
            "console": "integratedTerminal",
            "args": [
                "--fp16",
                "--root_dir",
                "/data/GIT/swde/my_data/train/my_CF_processed/",
                "--model_name_or_path",
                "microsoft/markuplm-base",
                "--output_dir",
                "/data/GIT/unilm/markuplm/markuplmft/models/delete/",
                "--do_train",
                "--per_gpu_train_batch_size",
                "16",
                "--num_train_epochs",
                "3",
                "--learning_rate",
                "2e-5",
                "--warmup_ratio",
                "0.1",
                "--overwrite_output_dir",
                "--save_at_each_epoch",
                "1",
                // "--overwrite_cache",
            ]
        },
        {
            "name": "Python: Run train",
            "type": "python",
            "request": "launch",
            "program": "/data/GIT/unilm/markuplm/markuplmft/fine_tuning/run_swde/run.py",
            "console": "integratedTerminal",
            "args": [
                "--fp16",
                "--root_dir",
                "/data/GIT/swde/my_data/train/my_CF_processed/",
                "--model_name_or_path",
                "microsoft/markuplm-base",
                "--output_dir",
                "/data/GIT/unilm/markuplm/markuplmft/models/markuplm/",
                "--do_train",
                "--per_gpu_train_batch_size",
                "16",
                "--num_train_epochs",
                "1",
                "--learning_rate",
                "2e-5",
                "--save_steps",
                "1000000",
                "--warmup_ratio",
                "0.1",
                "--overwrite_output_dir",
                // "--overwrite_cache",
            ]
        },
        {
            "name": "Python: Run evaluation",
            "type": "python",
            "request": "launch",
            "program": "/data/GIT/unilm/markuplm/markuplmft/fine_tuning/run_swde/run.py",
            "console": "integratedTerminal",
            "args": [
                "--fp16",
                "--root_dir",
                "/data/GIT/swde/my_data/develop/my_CF_processed/",
                "--model_name_or_path",
                "microsoft/markuplm-base",
                "--output_dir",
                "/data/GIT/unilm/markuplm/markuplmft/fine_tuning/run_swde/",
                "--do_eval",
                "--per_gpu_eval_batch_size",
                "16",
                "--model_path",
                "/data/GIT/unilm/markuplm/markuplmft/models/markuplm/286",
                // "--overwrite_cache",
            ]
        },
        {
            "name": "Python: Prepare data - train",
            "type": "python",
            "request": "launch",
            "program": "/data/GIT/unilm/markuplm/markuplmft/fine_tuning/run_swde/prepare_data.py",
            "console": "integratedTerminal",
            "args": [
                "--input_groundtruth_path",
                "/data/GIT/swde/my_data/train/my_CF_sourceCode/groundtruth",
                "--input_pickle_path",
                "/data/GIT/swde/my_data/train/my_CF_sourceCode/wae.pickle",
                "--output_data_path",
                "/data/GIT/swde/my_data/train/my_CF_processed",
            ]
        },
        {
            "name": "Python: Prepare data - develop",
            "type": "python",
            "request": "launch",
            "program": "/data/GIT/unilm/markuplm/markuplmft/fine_tuning/run_swde/prepare_data.py",
            "console": "integratedTerminal",
            "args": [
                "--input_groundtruth_path",
                "/data/GIT/swde/my_data/develop/my_CF_sourceCode/groundtruth",
                "--input_pickle_path",
                "/data/GIT/swde/my_data/develop/my_CF_sourceCode/wae.pickle",
                "--output_data_path",
                "/data/GIT/swde/my_data/develop/my_CF_processed",
            ]
        },
        {
            "name": "Python: Pack Data - train",
            "type": "python",
            "request": "launch",
            "program": "/data/GIT/unilm/markuplm/markuplmft/fine_tuning/run_swde/pack_data.py",
            "console": "integratedTerminal",
            "args": [
                "--input_swde_path",
                "/data/GIT/swde/my_data/train/my_CF_sourceCode/WAE/",
                "--output_pack_path",
                "/data/GIT/swde/my_data/train/my_CF_sourceCode/wae.pickle"
            ]
        },
        {
            "name": "Python: Pack Data - develop",
            "type": "python",
            "request": "launch",
            "program": "/data/GIT/unilm/markuplm/markuplmft/fine_tuning/run_swde/pack_data.py",
            "console": "integratedTerminal",
            "args": [
                "--input_swde_path",
                "/data/GIT/swde/my_data/develop/my_CF_sourceCode/WAE/",
                "--output_pack_path",
                "/data/GIT/swde/my_data/develop/my_CF_sourceCode/wae.pickle"
            ]
        },
        {
            "name": "Python: Convert Data",
            "type": "python",
            "request": "launch",
            "program": "/data/GIT/unilm/markuplm/notebooks/Convert_CF_data_to_SWDE.py",
            "console": "integratedTerminal",
        },
    ]
}
